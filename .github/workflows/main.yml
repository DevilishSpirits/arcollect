# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master-staging, gh-action-test ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    runs-on: [archlinux]
    steps:
      - uses: actions/checkout@v2
      - name: Build project
        uses: BSFishy/meson-build@v1.0.3
        with:
          action: build
          meson-version: 0.59.0
      - name: Test project
        uses: BSFishy/meson-build@v1.0.3
        with:
          action: test
          meson-version: 0.59.0
      - name: Install project
        uses: BSFishy/meson-build@v1.0.3
        with:
          action: install
          meson-version: 0.59.0
        env:
          DESTDIR: "archive-out"
      - name: Archiving
        run: tar -cf archive-out.tar -C build archive-out --transform 's/archive-out//g'
      - name: Uploading DESDIR artifact
        uses: actions/upload-artifact@v2
        with:
          name: build_DESTDIR.tar
          path: archive-out.tar
      - name: Uploading arcollect-webextension.zip artifact
        uses: actions/upload-artifact@v2
        with:
          name: build_webextension.zip
          path: build/webextension/arcollect.zip
  build-wrapped:
    runs-on: [archlinux]
    steps:
      - uses: actions/checkout@v2
      - name: Build project
        uses: BSFishy/meson-build@v1.0.3
        with:
          action: build
          setup-options: --force-fallback-for libcurl,sdl2,freetype2,harfbuzz,sqlite3,INIReader,freetype2,libjpeg,libpng,libtiff-4,zlib
          meson-version: 0.59.0
      - name: Test project
        uses: BSFishy/meson-build@v1.0.3
        with:
          action: test
          meson-version: 0.59.0
      - name: Install project
        uses: BSFishy/meson-build@v1.0.3
        with:
          action: install
          meson-version: 0.59.0
        env:
          DESTDIR: "archive-out"
      - name: Archiving
        run: tar -cf archive-out.tar -C build archive-out --transform 's/archive-out//g'
      - name: Uploading DESDIR artifact
        uses: actions/upload-artifact@v2
        with:
          name: build-wrapped_DESTDIR.tar
          path: archive-out.tar
      - name: Uploading arcollect-webextension.zip artifact
        uses: actions/upload-artifact@v2
        with:
          name: build-wrapped_webextension.zip
          path: build/webextension/arcollect.zip
  build-ubuntu-20_04:
    runs-on: [ubuntu-20.04]
    steps:
      - uses: actions/checkout@v2
      - name: Update apt cache
        run: sudo apt update
      - name: Install dependencies and tools
        run: sudo apt install libsdl2-dev libfreetype-dev libharfbuzz-dev libopenimageio-dev libboost-all-dev libcurl4-openssl-dev libdbus-1-dev liblcms2-dev python3-setuptools lintian
      - name: Install Meson and Ninja using pip3
        run: sudo pip3 install meson==0.59.0 ninja
      - name: Install Mozilla's web-ext with npm
        run: sudo npm install -g web-ext
      - name: Setup project
        run: meson build --prefix=/usr -Dstrip=true -Dcpp_link_args='-z now'
      - name: Build project
        run: ninja -C build
      - name: Uploading arcollect-webextension.zip artifact
        uses: actions/upload-artifact@v2
        with:
          name: build-ubuntu-20_04_webextension.zip
          path: build/webextension/arcollect.zip
      - name: Generate Debian package
        run: ninja -C build "packaging/$(grep -oEm 1 "arcollect_[0-9\.]+-1_$(echo -n "$(dpkg-architecture -q DEB_HOST_ARCH)").deb" build/build.ninja)"
        shell: bash
      - name: Uploading Debian package artifact
        uses: actions/upload-artifact@v2
        with:
          name: build-ubuntu-20_04-packaging
          path: build/packaging
      - name: Test project
        run: ninja -C build test
      - name: Link Debian package
        run: ln "build/packaging/$(grep -oEm 1 "arcollect_[0-9\.]+-1_$(echo -n "$(dpkg-architecture -q DEB_HOST_ARCH)").deb" build/build.ninja)" arcollect.deb
        shell: bash
      - name: Lintian Debian package
        run: lintian --no-tag-display-limit --dont-check-part debian/changelog,debian/copyright -I -E --verbose -- arcollect.deb
      - name: Install Debian package
        run: sudo dpkg -i arcollect.deb
        shell: bash
      - name: Run `webext-adder-online` test
        run: python3 webext-adder/tests/webext-adder-test.py webext-adder-online $(find -regex '.*\.[a-z]+.json' | grep -vF -e deviantart)
        shell: bash
        env:
          ARCOLLECT_DEBUG: all
          ARCOLLECT_WEBEXT_ADDER_PATH: /usr/libexec/arcollect-webext-adder
      - name: Upload `webext-adder-online` XDG_DATA_HOME
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: webext-adder-online-ubuntu-20_04
          path: webext-adder-online
      - name: Upload build dir
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: ubuntu-20_04-builddir
          path: build
  build-windows-2019:
    runs-on: [windows-2019]
    env:
      PATH: C:\Program Files\PowerShell\7;C:\Users\runneradmin\.dotnet\tools;C:\Program Files\MongoDB\Server\4.4\bin;C:\aliyun-cli;C:\vcpkg;C:\cf-cli;C:\Program Files (x86)\NSIS\;C:\tools\zstd;C:\Program Files\Mercurial\;C:\hostedtoolcache\windows\stack\2.7.1\x64;C:\tools\ghc-9.0.1\bin;C:\Program Files\dotnet;C:\mysql-5.7.21-winx64\bin;C:\Program Files\R\R-4.1.0\bin\x64;C:\SeleniumWebDrivers\GeckoDriver;C:\Program Files (x86)\sbt\bin;C:\Rust\.cargo\bin;C:\Program Files (x86)\GitHub CLI;C:\Program Files\Git\bin;C:\Program Files (x86)\pipx_bin;C:\hostedtoolcache\windows\go\1.15.13\x64\bin;C:\hostedtoolcache\windows\Python\3.7.9\x64\Scripts;C:\hostedtoolcache\windows\Python\3.7.9\x64;C:\hostedtoolcache\windows\Ruby\2.5.9\x64\bin;C:\hostedtoolcache\windows\Java_Adopt_jdk\8.0.292-10\x64\bin;C:\npm\prefix;C:\Program Files (x86)\Microsoft SDKs\Azure\CLI2\wbin;C:\ProgramData\kind;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Microsoft\Web Platform Installer\;C:\Program Files\Docker;C:\Program Files\PowerShell\7\;C:\Program Files\dotnet\;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files (x86)\Windows Kits\10\Windows Performance Toolkit\;C:\Program Files (x86)\Microsoft SQL Server\110\DTS\Binn\;C:\Program Files (x86)\Microsoft SQL Server\120\DTS\Binn\;C:\Program Files (x86)\Microsoft SQL Server\130\DTS\Binn\;C:\Program Files (x86)\Microsoft SQL Server\140\DTS\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\nodejs\;C:\Program Files\Microsoft Service Fabric\bin\Fabric\Fabric.Code;C:\Program Files\Microsoft SDKs\Service Fabric\Tools\ServiceFabricLocalClusterManager;C:\Program Files\OpenSSL\bin;C:\Program Files\Git\cmd;C:\Program Files\Git\mingw64\bin;C:\Program Files\Git\usr\bin;c:\tools\php;C:\Program Files (x86)\sbt\bin;C:\Program Files\TortoiseSVN\bin;C:\SeleniumWebDrivers\ChromeDriver\;C:\SeleniumWebDrivers\EdgeDriver\;C:\Program Files\CMake\bin;C:\Program Files\Amazon\AWSCLIV2\;C:\Program Files\Amazon\SessionManagerPlugin\bin\;C:\Program Files\Amazon\AWSSAMCLI\bin\;C:\Program Files (x86)\Google\Cloud SDK\google-cloud-sdk\bin;C:\Program Files (x86)\Microsoft BizTalk Server\;C:\Users\runneradmin\AppData\Local\Microsoft\WindowsApps;C:\msys64\usr\bin;C:\msys64\mingw64\bin;C:\Program Files (x86)\WiX Toolset v3.11\bin # Remove Chocolatey and Strawberry largely outdated GCC from the PATH and use MSYS2 instead. Also add WiX Toolset
    steps:
      - uses: actions/checkout@v2
      - name: Install Boost
        run: pacman -S mingw-w64-x86_64-boost --noconfirm
      - name: Install Meson
        run: pip install meson ninja
      - name: Configure project
        run: meson build --force-fallback-for=freetype2,fmt,bzip2,giflib,libpng,Imath,inih,lcms2,libcurl,libjpeg,libtiff,OpenImageIO,rapidjson,robin-map,roboto,sdl2,freetype2,harfbuzz,sqlite3 -Dcpp_link_args=-static -Dc_link_args=-static # TODO Make it works on Windows
      - name: Build project
        run: ninja -C build
      - name: Generate MSI
        run: ninja -C build packaging/arcollect.msi
      - name: Upload MSI artifact
        uses: actions/upload-artifact@v2
        with:
          name: msi-windows-2019
          path: build/packaging/arcollect.msi
      - name: Test project
        run: ninja -C build test
      - name: Install MSI
        run: msiexec /i /q build/packaging/arcollect.msi
      - name: Upload build dir
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: windows-2019-builddir
          path: build
  check-webextensions-same:
    needs: [build, build-wrapped, build-ubuntu-20_04]
    runs-on: [ubuntu-latest]
    steps:
      - name: Download build_webextension.zip
        uses: actions/download-artifact@v2
        with:
          name: build_webextension.zip
          path: build_webextension
      - name: Download build-wrapped_webextension.zip
        uses: actions/download-artifact@v2
        with:
          name: build-wrapped_webextension.zip
          path: build-wrapped_webextension
      - name: Download build-ubuntu-20_04_webextension.zip
        uses: actions/download-artifact@v2
        with:
          name: build-ubuntu-20_04_webextension.zip
          path: build-ubuntu-20_04_webextension
      - name: Make unpack dirs
        run: mkdir build build-wrapped build-ubuntu-20_04
      - name: Unpack build_webextension.zip
        run: unzip ../build_webextension/arcollect.zip
        working-directory: build
      - name: Unpack build-wrapped_webextension.zip
        run: unzip ../build-wrapped_webextension/arcollect.zip
        working-directory: build-wrapped
      - name: Unpack build-ubuntu-20_04_webextension.zip
        run: unzip ../build-ubuntu-20_04_webextension/arcollect.zip
        working-directory: build-ubuntu-20_04
      - name: Compare build and build-wrapped results
        run: diff -ry build build-wrapped
      - name: Compare build and build-ubuntu-20_04 results
        run: diff -ry build build-ubuntu-20_04
  merge-to-master:
    needs: [check-webextensions-same, build-windows-2019]
    runs-on: [ubuntu-latest]
    if: ${{ (github.event_name == 'push') && (github.ref == 'refs/heads/master-staging') }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Checkout to master branch
        run: git checkout master
      - name: Merge master-staging in master
        run: git merge master-staging --ff-only
      - name: Push
        run: git push -u origin master
