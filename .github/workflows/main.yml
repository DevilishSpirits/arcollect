# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master-staging, gh-action-test ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    runs-on: [archlinux]
    steps:
      - uses: actions/checkout@v2
      - name: Build project
        uses: BSFishy/meson-build@v1.0.3
        with:
          action: build
          meson-version: 0.57.1
      - name: Test project
        uses: BSFishy/meson-build@v1.0.3
        with:
          action: test
          meson-version: 0.57.1
      - name: Install project
        uses: BSFishy/meson-build@v1.0.3
        with:
          action: install
          meson-version: 0.57.1
        env:
          DESTDIR: "archive-out"
      - name: Archiving
        run: tar -cf archive-out.tar -C build archive-out --transform 's/archive-out//g'
      - name: Uploading DESDIR artifact
        uses: actions/upload-artifact@v2
        with:
          name: build_DESTDIR.tar
          path: archive-out.tar
      - name: Uploading arcollect-webextension.zip artifact
        uses: actions/upload-artifact@v2
        with:
          name: build_webextension.zip
          path: build/webextension/arcollect.zip
  build-wrapped:
    runs-on: [archlinux]
    steps:
      - uses: actions/checkout@v2
      - name: Build project
        uses: BSFishy/meson-build@v1.0.3
        with:
          action: build
          setup-options: --force-fallback-for sqlite,libcurl,sdl2,sdl2_image,sdl2_ttf
          meson-version: 0.57.1
      - name: Test project
        uses: BSFishy/meson-build@v1.0.3
        with:
          action: test
          meson-version: 0.57.1
      - name: Install project
        uses: BSFishy/meson-build@v1.0.3
        with:
          action: install
          meson-version: 0.57.1
        env:
          DESTDIR: "archive-out"
      - name: Archiving
        run: tar -cf archive-out.tar -C build archive-out --transform 's/archive-out//g'
      - name: Uploading DESDIR artifact
        uses: actions/upload-artifact@v2
        with:
          name: build-wrapped_DESTDIR.tar
          path: archive-out.tar
      - name: Uploading arcollect-webextension.zip artifact
        uses: actions/upload-artifact@v2
        with:
          name: build-wrapped_webextension.zip
          path: build/webextension/arcollect.zip
  build-ubuntu-18_04:
    runs-on: [ubuntu-18.04]
    steps:
      - uses: actions/checkout@v2
      - name: Update apt cache
        run: sudo apt update
      - name: Install SDL2, his image and ttf modules, libcurl, Python3 setuptools and lintian
        run: sudo apt install libsdl2-dev libsdl2-image-dev libsdl2-ttf-dev libcurl4-openssl-dev python3-setuptools lintian
      - name: Install Meson using pip3
        run: sudo pip3 install meson==0.57.1
      - name: Install Mozilla's web-ext with npm
        run: sudo npm install -g web-ext
      - name: Build project
        uses: BSFishy/meson-build@v1.0.3
        with:
          action: build
          setup-options: --prefix=/usr -Dstrip=true
          meson-version: 0.57.1
        env:
          CC:  clang
          CXX: clang++
      - name: Test project
        uses: BSFishy/meson-build@v1.0.3
        with:
          action: test
          meson-version: 0.57.1
      - name: Generate Debian package
        run: ninja -C build "packaging/$(grep -oEm 1 "arcollect_[0-9\.]+-1_$(echo -n "$(dpkg-architecture -q DEB_HOST_ARCH)").deb" build/build.ninja)"
        shell: bash
      #- name: Lintian Debian package
      #TODO  run: lintian --no-tag-display-limit --dont-check-part debian/changelog,debian/copyright -I -E --verbose -- "build/packaging/$(grep -oEm 1 "arcollect_[0-9\.]+-1_$(echo -n "$(dpkg-architecture -q DEB_HOST_ARCH)").deb" build/build.ninja)"
      - name: Uploading Debian package artifact
        uses: actions/upload-artifact@v2
        with:
          name: build-ubuntu-18_04-packaging
          path: build/packaging
      - name: Uploading arcollect-webextension.zip artifact
        uses: actions/upload-artifact@v2
        with:
          name: build-ubuntu-18_04_webextension.zip
          path: build/webextension/arcollect.zip
  build-ubuntu-20_04:
    runs-on: [ubuntu-20.04]
    steps:
      - uses: actions/checkout@v2
      - name: Update apt cache
        run: sudo apt update
      - name: Install SDL2, his image and ttf modules, libcurl, Python3 setuptools and lintian
        run: sudo apt install libsdl2-dev libsdl2-image-dev libsdl2-ttf-dev libcurl4-openssl-dev python3-setuptools lintian
      - name: Install Mozilla's web-ext with npm
        run: sudo npm install -g web-ext
      - name: Build project
        uses: BSFishy/meson-build@v1.0.3
        with:
          action: build
          setup-options: --prefix=/usr -Dstrip=true
          meson-version: 0.57.1
      - name: Test project
        uses: BSFishy/meson-build@v1.0.3
        with:
          action: test
          meson-version: 0.57.1
      - name: Generate Debian package
        run: ninja -C build "packaging/$(grep -oEm 1 "arcollect_[0-9\.]+-1_$(echo -n "$(dpkg-architecture -q DEB_HOST_ARCH)").deb" build/build.ninja)"
        shell: bash
      - name: Lintian Debian package
        run: lintian --no-tag-display-limit --dont-check-part debian/changelog,debian/copyright -I -E --verbose -- "build/packaging/$(grep -oEm 1 "arcollect_[0-9\.]+-1_$(echo -n "$(dpkg-architecture -q DEB_HOST_ARCH)").deb" build/build.ninja)"
      - name: Uploading Debian package artifact
        uses: actions/upload-artifact@v2
        with:
          name: build-ubuntu-20_04-packaging
          path: build/packaging
      - name: Uploading arcollect-webextension.zip artifact
        uses: actions/upload-artifact@v2
        with:
          name: build-ubuntu-20_04_webextension.zip
          path: build/webextension/arcollect.zip
  check-webextensions-same:
    needs: [build, build-wrapped, build-ubuntu-18_04, build-ubuntu-20_04]
    runs-on: [ubuntu-latest]
    steps:
      - name: Download build_webextension.zip
        uses: actions/download-artifact@v2
        with:
          name: build_webextension.zip
          path: build_webextension
      - name: Download build-wrapped_webextension.zip
        uses: actions/download-artifact@v2
        with:
          name: build-wrapped_webextension.zip
          path: build-wrapped_webextension
      - name: Download build-ubuntu-20_04_webextension.zip
        uses: actions/download-artifact@v2
        with:
          name: build-ubuntu-20_04_webextension.zip
          path: build-ubuntu-20_04_webextension
      - name: Download build-ubuntu-18_04_webextension.zip
        uses: actions/download-artifact@v2
        with:
          name: build-ubuntu-18_04_webextension.zip
          path: build-ubuntu-18_04_webextension
      - name: Make unpack dirs
        run: mkdir build build-wrapped build-ubuntu-20_04 build-ubuntu-18_04
      - name: Unpack build_webextension.zip
        run: unzip ../build_webextension/arcollect.zip
        working-directory: build
      - name: Unpack build-wrapped_webextension.zip
        run: unzip ../build-wrapped_webextension/arcollect.zip
        working-directory: build-wrapped
      - name: Unpack build-ubuntu-18_04_webextension.zip
        run: unzip ../build-ubuntu-18_04_webextension/arcollect.zip
        working-directory: build-ubuntu-18_04
      - name: Unpack build-ubuntu-20_04_webextension.zip
        run: unzip ../build-ubuntu-20_04_webextension/arcollect.zip
        working-directory: build-ubuntu-20_04
      - name: Compare build and build-wrapped results
        run: diff -ry build build-wrapped
      - name: Compare build and build-ubuntu-18_04 results
        run: diff -ry build build-ubuntu-18_04
      - name: Compare build and build-ubuntu-20_04 results
        run: diff -ry build build-ubuntu-20_04
  merge-to-master:
    needs: [check-webextensions-same]
    runs-on: [ubuntu-latest]
    if: ${{ (github.event_name == 'push') && (github.ref == 'refs/heads/master-staging') }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Checkout to master branch
        run: git checkout master
      - name: Merge master-staging in master
        run: git merge master-staging --ff-only
      - name: Push
        run: git push -u origin master
