# This is a basic workflow to help you get started with Actions

name: Create a new release

# Controls when the action will run. 
on:
  push:
    tags:
      - 'v*'
  
jobs:
  test:
    runs-on: [archlinux]
    steps:
      - uses: actions/checkout@v2
      - name: Build project
        uses: BSFishy/meson-build@v1.0.3
        with:
          action: build
          setup-options: -Dbuildtype=release -Dunity=on -Db_lto=true -Dstrip=true -Denable_webextension=false
          meson-version: 0.57.1
      - name: Test project
        uses: BSFishy/meson-build@v1.0.3
        with:
          action: test
          meson-version: 0.57.1
      - name: Install project
        uses: BSFishy/meson-build@v1.0.3
        with:
          action: install
          meson-version: 0.57.1
        env:
          DESTDIR: "archive-out"
  test-wrapped:
    runs-on: [archlinux]
    steps:
      - uses: actions/checkout@v2
      - name: Build project
        uses: BSFishy/meson-build@v1.0.3
        with:
          action: build
          setup-options: -Dbuildtype=release -Dunity=on -Db_lto=true -Dstrip=true -Denable_webextension=false --force-fallback-for sqlite,sdl2,sdl2_image,sdl2_ttf
          meson-version: 0.57.1
      - name: Test project
        uses: BSFishy/meson-build@v1.0.3
        with:
          action: test
          meson-version: 0.57.1
      - name: Install project
        uses: BSFishy/meson-build@v1.0.3
        with:
          action: install
          meson-version: 0.57.1
        env:
          DESTDIR: "archive-out"
  test-ubuntu-20_04:
    runs-on: [ubuntu-20.04]
    steps:
      - uses: actions/checkout@v2
      - name: Install SDL2, his image and ttf modules and curl
        run: sudo apt install libsdl2-dev libsdl2-image-dev libsdl2-ttf-dev libcurl-dev
      - name: Install Mozilla's web-ext with npm
        run: sudo npm install -g web-ext
      - name: Build project
        uses: BSFishy/meson-build@v1.0.3
        with:
          action: build
          setup-options: -Dbuildtype=release -Dunity=on -Db_lto=true -Dstrip=true -Denable_webextension=false
          meson-version: 0.57.1
      - name: Test project
        uses: BSFishy/meson-build@v1.0.3
        with:
          action: test
          meson-version: 0.57.1
      - name: Install project
        uses: BSFishy/meson-build@v1.0.3
        with:
          action: install
          meson-version: 0.57.1
        env:
          DESTDIR: "archive-out"
  build-webextension:
    # Simply build the webextension (only)
    needs: [test, test-wrapped, test-ubuntu-20_04]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: BSFishy/meson-build@v1.0.3
        with:
          action: build
          setup-options: -Denable_native_progs=false # Disable C++ code
          meson-version: 0.57.1
      - uses: actions/upload-artifact@v2
        with:
          name: arcollect-webextension.zip
          path: build/webextension/arcollect.zip
  sign-amo:
    # Sign the webextenson
    needs: [build-webextension]
    runs-on: ubuntu-latest
    steps:
      - name: Download arcollect-webextension.zip artifact
        uses: actions/download-artifact@v2.0.9
        with:
          name: arcollect-webextension.zip
      - name: Unzip arcollect-webextension.zip
        run: unzip arcollect.zip -d webextension
      - name: npm install web-ext
        run: npm install web-ext
      - name: Perform signing on addons.mozilla.org
        run: node ./node_modules/.bin/web-ext sign --no-input --no-config-discovery --channel unlisted -s webextension -a web-ext-artifacts
        env:
          WEB_EXT_API_KEY: ${{ secrets.AMO_WEB_EXT_API_KEY }}
          WEB_EXT_API_SECRET: ${{ secrets.AMO_WEB_EXT_API_SECRET }}
      - uses: actions/upload-artifact@v2
        with:
          name: web-ext-artifacts
          path: web-ext-artifacts
  release:
    # Create a new draft release
    runs-on: ubuntu-latest
    needs: [sign-amo]
    steps:
      - name: Download AMO signed webextension
        uses: actions/download-artifact@v2.0.9
        with:
          name: web-ext-artifacts
          path: web-ext-artifacts
      - name: Release on GitHub
        uses: softprops/action-gh-release@v1
        with:
          draft: true
          files: |
            web-ext-artifacts/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
