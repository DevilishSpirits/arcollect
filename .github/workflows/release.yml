# This is a basic workflow to help you get started with Actions

name: Create a new release

# Controls when the action will run. 
on:
  push:
    tags:
      - 'v*'
  
jobs:
  archlinux-package:
    runs-on: [archlinux]
    steps:
      - uses: actions/checkout@v2
      - name: Configure project
        run: meson build
      - name: Generate package (makepkg -p PKGBUILD.local)
        run: makepkg -p PKGBUILD.local -c CFLAGS= CXXFLAGS= LDFLAGS= PKGEXT=".pkg.tar.zst"
        working-directory: build/packaging
      - uses: actions/upload-artifact@v2
        with:
          name: archlinux-package
          path: build/packaging
  ubuntu-20_04-package:
    runs-on: [ubuntu-20.04]
    steps:
      - uses: actions/checkout@v2
      - name: Update apt cache
        run: sudo apt update
      - name: Install dependencies and tools
        run: sudo apt install libsdl2-dev libfreetype-dev libharfbuzz-dev libopenimageio-dev libboost-all-dev libcurl4-openssl-dev libdbus-1-dev liblcms2-dev python3-setuptools lintian
      - name: Install Meson and Ninja using pip3
        run: sudo pip3 install meson==0.59.0 ninja
      - name: Install Mozilla's web-ext with npm
        run: sudo npm install -g web-ext
      - name: Setup project
        run: meson build --prefix=/usr -Dstrip=true -Dcpp_link_args='-z now' -Dbuildtype=release -Denable_webextension=false -Db_lto=true
      - name: Build project
        run: ninja -C build
      - name: Test project
        run: ninja -C build test
      - name: Generate Debian package
        run: ninja -C build "packaging/$(grep -oEm 1 "arcollect_[0-9\.]+-1_$(echo -n "$(dpkg-architecture -q DEB_HOST_ARCH)").deb" build/build.ninja)"
        shell: bash
      - name: Lintian Debian package
        run: lintian --no-tag-display-limit --dont-check-part debian/changelog,debian/copyright -I -E --verbose -- "build/packaging/$(grep -oEm 1 "arcollect_[0-9\.]+-1_$(echo -n "$(dpkg-architecture -q DEB_HOST_ARCH)").deb" build/build.ninja)"
      - name: Move Debian package
        run: mkdir debian-package && mv "build/packaging/$(grep -oEm 1 "arcollect_[0-9\.]+-1_$(echo -n "$(dpkg-architecture -q DEB_HOST_ARCH)").deb" build/build.ninja)" "debian-package/$(grep -oEm 1 "arcollect_[0-9\.]+-1_$(echo -n "$(dpkg-architecture -q DEB_HOST_ARCH)").deb" build/build.ninja | sed 's/-1/-ubuntu20.04/')"
        shell: bash
      - name: Uploading Debian package artifact
        uses: actions/upload-artifact@v2
        with:
          name: build-ubuntu-20_04-packaging
          path: debian-package 
  windows-x64-msi-package:
    runs-on: [windows-2019]
    env:
      PATH: C:\Program Files\PowerShell\7;C:\Users\runneradmin\.dotnet\tools;C:\Program Files\MongoDB\Server\4.4\bin;C:\aliyun-cli;C:\vcpkg;C:\cf-cli;C:\Program Files (x86)\NSIS\;C:\tools\zstd;C:\Program Files\Mercurial\;C:\hostedtoolcache\windows\stack\2.7.1\x64;C:\tools\ghc-9.0.1\bin;C:\Program Files\dotnet;C:\mysql-5.7.21-winx64\bin;C:\Program Files\R\R-4.1.0\bin\x64;C:\SeleniumWebDrivers\GeckoDriver;C:\Program Files (x86)\sbt\bin;C:\Rust\.cargo\bin;C:\Program Files (x86)\GitHub CLI;C:\Program Files\Git\bin;C:\Program Files (x86)\pipx_bin;C:\hostedtoolcache\windows\go\1.15.13\x64\bin;C:\hostedtoolcache\windows\Python\3.7.9\x64\Scripts;C:\hostedtoolcache\windows\Python\3.7.9\x64;C:\hostedtoolcache\windows\Ruby\2.5.9\x64\bin;C:\hostedtoolcache\windows\Java_Adopt_jdk\8.0.292-10\x64\bin;C:\npm\prefix;C:\Program Files (x86)\Microsoft SDKs\Azure\CLI2\wbin;C:\ProgramData\kind;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Microsoft\Web Platform Installer\;C:\Program Files\Docker;C:\Program Files\PowerShell\7\;C:\Program Files\dotnet\;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files (x86)\Windows Kits\10\Windows Performance Toolkit\;C:\Program Files (x86)\Microsoft SQL Server\110\DTS\Binn\;C:\Program Files (x86)\Microsoft SQL Server\120\DTS\Binn\;C:\Program Files (x86)\Microsoft SQL Server\130\DTS\Binn\;C:\Program Files (x86)\Microsoft SQL Server\140\DTS\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\nodejs\;C:\Program Files\Microsoft Service Fabric\bin\Fabric\Fabric.Code;C:\Program Files\Microsoft SDKs\Service Fabric\Tools\ServiceFabricLocalClusterManager;C:\Program Files\OpenSSL\bin;C:\Program Files\Git\cmd;C:\Program Files\Git\mingw64\bin;C:\Program Files\Git\usr\bin;c:\tools\php;C:\Program Files (x86)\sbt\bin;C:\Program Files\TortoiseSVN\bin;C:\SeleniumWebDrivers\ChromeDriver\;C:\SeleniumWebDrivers\EdgeDriver\;C:\Program Files\CMake\bin;C:\Program Files\Amazon\AWSCLIV2\;C:\Program Files\Amazon\SessionManagerPlugin\bin\;C:\Program Files\Amazon\AWSSAMCLI\bin\;C:\Program Files (x86)\Google\Cloud SDK\google-cloud-sdk\bin;C:\Program Files (x86)\Microsoft BizTalk Server\;C:\Users\runneradmin\AppData\Local\Microsoft\WindowsApps;C:\msys64\usr\bin;C:\msys64\mingw64\bin;C:\Program Files (x86)\WiX Toolset v3.11\bin # Remove Chocolatey and Strawberry largely outdated GCC from the PATH and use MSYS2 instead. Also add WiX Toolset
    steps:
      - uses: actions/checkout@v2
      - name: Install Meson
        run: pip install meson ninja
      - name: Configure project
        run: meson build --force-fallback-for=freetype2,fmt,bzip2,giflib,libpng,Imath,inih,lcms2,libcurl,libjpeg,libtiff,OpenImageIO,robin-map,roboto,sdl2,harfbuzz,sqlite3,boost -Denable_webextension=false -Dcpp_link_args=-static -Dc_link_args=-static -Dbuildtype=release -Db_lto=true -Dstrip=true
      - name: Build project
        run: ninja -C build
      - name: Generate MSI
        run: ninja -C build packaging/arcollect.msi
      - name: Upload MSI artifact
        uses: actions/upload-artifact@v2
        with:
          name: windows-msi-x64
          path: build/packaging/arcollect.msi
      - name: Test project
        run: ninja -C build test
      - name: Install MSI
        run: msiexec /i /q build/packaging/arcollect.msi
  build-webextension:
    # Simply build the webextension (only)
    needs: [archlinux-package, ubuntu-20_04-package, windows-x64-msi-package]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: BSFishy/meson-build@v1.0.3
        with:
          action: build
          setup-options: -Denable_native_progs=false -Dwith_xdg=disabled # Disable C++ code
          meson-version: 0.59.0
      - uses: actions/upload-artifact@v2
        with:
          name: arcollect-webextension.zip
          path: build/webextension/arcollect.zip
  sign-amo:
    # Sign the webextenson
    needs: [build-webextension]
    runs-on: ubuntu-latest
    steps:
      - name: Download arcollect-webextension.zip artifact
        uses: actions/download-artifact@v2.0.9
        with:
          name: arcollect-webextension.zip
      - name: Unzip arcollect-webextension.zip
        run: unzip arcollect.zip -d webextension
      - name: npm install web-ext
        run: npm install web-ext
      - name: Perform signing on addons.mozilla.org
        run: node ./node_modules/.bin/web-ext sign --no-input --no-config-discovery --channel unlisted -s webextension -a web-ext-artifacts
        env:
          WEB_EXT_API_KEY: ${{ secrets.AMO_WEB_EXT_API_KEY }}
          WEB_EXT_API_SECRET: ${{ secrets.AMO_WEB_EXT_API_SECRET }}
      - uses: actions/upload-artifact@v2
        with:
          name: web-ext-artifacts
          path: web-ext-artifacts
  release:
    # Create a new draft release
    runs-on: ubuntu-latest
    needs: [sign-amo]
    steps:
      - uses: actions/checkout@v2
      - name: Download AMO signed webextension
        uses: actions/download-artifact@v2.0.9
        with:
          name: web-ext-artifacts
          path: web-ext-artifacts
      - name: Download ArchLinux package
        uses: actions/download-artifact@v2.0.9
        with:
          name: archlinux-package
          path: archlinux-package
      - name: Download Ubuntu 20.04 package
        uses: actions/download-artifact@v2.0.9
        with:
          name: build-ubuntu-20_04-packaging
      - name: Download Windows x64 MSI
        uses: actions/download-artifact@v2.0.9
        with:
          name: windows-msi-x64
      - name: Rename Windows x64 MSI
        run: mv arcollect.msi arcollect-x64.msi
      - name: Draft release body # TODO Also autogenerate title
        run: git log --format=%B -n 1 | tail -n +3 | cut -f 2- > release.body
        shell: bash
      - name: Release on GitHub
        uses: softprops/action-gh-release@v1
        with:
          draft: true
          body_path: release.body
          files: |
            web-ext-artifacts/*
            archlinux-package/PKGBUILD
            archlinux-package/arcollect-*
            arcollect-x64.msi
            *.deb
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
