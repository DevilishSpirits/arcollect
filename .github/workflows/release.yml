# This is a basic workflow to help you get started with Actions

name: Create a new release

# Controls when the action will run. 
on:
  push:
    tags:
      - 'v*'
  
jobs:
  archlinux-package:
    runs-on: [archlinux]
    steps:
      - uses: actions/checkout@v2
      - name: Configure project
        run: meson build
      - name: Generate package (makepkg -p PKGBUILD.local)
        run: makepkg -p PKGBUILD.local -c CFLAGS= CXXFLAGS= LDFLAGS= PKGEXT=".pkg.tar.zst"
        working-directory: build/packaging
      - uses: actions/upload-artifact@v2
        with:
          name: archlinux-package
          path: build/packaging
  ubuntu-18_04-package:
    runs-on: [ubuntu-18.04]
    steps:
      - uses: actions/checkout@v2
      - name: Update apt cache
        run: sudo apt update
      - name: Install SDL2, his image and ttf modules, libcurl, Python3 setuptools and lintian
        run: sudo apt install libsdl2-dev libsdl2-image-dev libsdl2-ttf-dev libcurl4-openssl-dev python3-setuptools lintian
      - name: Install Meson and Ninja using pip3
        run: sudo pip3 install meson==0.57.1 ninja
      - name: Install Mozilla's web-ext with npm
        run: sudo npm install -g web-ext
      - name: Setup project
        run: meson build --prefix=/usr -Dstrip=true -Dcpp_link_args='-z now' -Dbuildtype=release -Dunity=on -Denable_webextension=false -Dcpp_link_args='-z now' # Find out why to make works -Dlto=true
        env:
          CC:  clang
          CXX: clang++
      - name: Build project
        run: ninja -C build
        env:
          CC:  clang
          CXX: clang++
      - name: Test project
        run: ninja -C build test
      - name: Generate Debian package
        run: ninja -C build "packaging/$(grep -oEm 1 "arcollect_[0-9\.]+-1_$(echo -n "$(dpkg-architecture -q DEB_HOST_ARCH)").deb" build/build.ninja)"
        shell: bash
      # TODO - name: Lintian Debian package
      #  run: lintian --no-tag-display-limit --dont-check-part debian/copyright -I -E --verbose -- "build/packaging/$(grep -oEm 1 "arcollect_[0-9\.]+-1_$(echo -n "$(dpkg-architecture -q DEB_HOST_ARCH)").deb" build/build.ninja)"
      - name: Move Debian package
        run: mkdir debian-package && mv "build/packaging/$(grep -oEm 1 "arcollect_[0-9\.]+-1_$(echo -n "$(dpkg-architecture -q DEB_HOST_ARCH)").deb" build/build.ninja)" "debian-package/$(grep -oEm 1 "arcollect_[0-9\.]+-1_$(echo -n "$(dpkg-architecture -q DEB_HOST_ARCH)").deb" build/build.ninja | sed 's/-1/-ubuntu18.04/')"
        shell: bash
      - name: Uploading Debian package artifact
        uses: actions/upload-artifact@v2
        with:
          name: build-ubuntu-18_04-packaging
          path: debian-package
  ubuntu-20_04-package:
    runs-on: [ubuntu-20.04]
    steps:
      - uses: actions/checkout@v2
      - name: Update apt cache
        run: sudo apt update
      - name: Install SDL2, his image and ttf modules, libcurl and lintian
        run: sudo apt install libsdl2-dev libsdl2-image-dev libsdl2-ttf-dev libcurl4-openssl-dev lintian
      - name: Install Meson and Ninja using pip3
        run: sudo pip3 install meson==0.57.1 ninja
      - name: Install Mozilla's web-ext with npm
        run: sudo npm install -g web-ext
      - name: Setup project
        run: meson build --prefix=/usr -Dstrip=true -Dcpp_link_args='-z now' -Dbuildtype=release -Dunity=on -Denable_webextension=false -Dlto=true
      - name: Build project
        run: ninja -C build
      - name: Test project
        run: ninja -C build test
      - name: Generate Debian package
        run: ninja -C build "packaging/$(grep -oEm 1 "arcollect_[0-9\.]+-1_$(echo -n "$(dpkg-architecture -q DEB_HOST_ARCH)").deb" build/build.ninja)"
        shell: bash
      - name: Lintian Debian package
        run: lintian --no-tag-display-limit --dont-check-part debian/changelog,debian/copyright -I -E --verbose -- "build/packaging/$(grep -oEm 1 "arcollect_[0-9\.]+-1_$(echo -n "$(dpkg-architecture -q DEB_HOST_ARCH)").deb" build/build.ninja)"
      - name: Move Debian package
        run: mkdir debian-package && mv "build/packaging/$(grep -oEm 1 "arcollect_[0-9\.]+-1_$(echo -n "$(dpkg-architecture -q DEB_HOST_ARCH)").deb" build/build.ninja)" "debian-package/$(grep -oEm 1 "arcollect_[0-9\.]+-1_$(echo -n "$(dpkg-architecture -q DEB_HOST_ARCH)").deb" build/build.ninja | sed 's/-1/-ubuntu20.04/')"
        shell: bash
      - name: Uploading Debian package artifact
        uses: actions/upload-artifact@v2
        with:
          name: build-ubuntu-20_04-packaging
          path: debian-package 
  build-webextension:
    # Simply build the webextension (only)
    needs: [archlinux-package, ubuntu-20_04-package, ubuntu-18_04-package]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: BSFishy/meson-build@v1.0.3
        with:
          action: build
          setup-options: -Denable_native_progs=false # Disable C++ code
          meson-version: 0.57.1
      - uses: actions/upload-artifact@v2
        with:
          name: arcollect-webextension.zip
          path: build/webextension/arcollect.zip
  sign-amo:
    # Sign the webextenson
    needs: [build-webextension]
    runs-on: ubuntu-latest
    steps:
      - name: Download arcollect-webextension.zip artifact
        uses: actions/download-artifact@v2.0.9
        with:
          name: arcollect-webextension.zip
      - name: Unzip arcollect-webextension.zip
        run: unzip arcollect.zip -d webextension
      - name: npm install web-ext
        run: npm install web-ext
      - name: Perform signing on addons.mozilla.org
        run: node ./node_modules/.bin/web-ext sign --no-input --no-config-discovery --channel unlisted -s webextension -a web-ext-artifacts
        env:
          WEB_EXT_API_KEY: ${{ secrets.AMO_WEB_EXT_API_KEY }}
          WEB_EXT_API_SECRET: ${{ secrets.AMO_WEB_EXT_API_SECRET }}
      - uses: actions/upload-artifact@v2
        with:
          name: web-ext-artifacts
          path: web-ext-artifacts
  release:
    # Create a new draft release
    runs-on: ubuntu-latest
    needs: [sign-amo]
    steps:
      - uses: actions/checkout@v2
      - name: Download AMO signed webextension
        uses: actions/download-artifact@v2.0.9
        with:
          name: web-ext-artifacts
          path: web-ext-artifacts
      - name: Download ArchLinux package
        uses: actions/download-artifact@v2.0.9
        with:
          name: archlinux-package
          path: archlinux-package
      - name: Download Ubuntu 18.04 package
        uses: actions/download-artifact@v2.0.9
        with:
          name: build-ubuntu-18_04-packaging
      - name: Download Ubuntu 20.04 package
        uses: actions/download-artifact@v2.0.9
        with:
          name: build-ubuntu-20_04-packaging
      - name: Draft release body # TODO Also autogenerate title
        run: git log --format=%B -n 1 | tail -n +3 | cut -f 2- > release.body
        shell: bash
      - name: Release on GitHub
        uses: softprops/action-gh-release@v1
        with:
          draft: true
          body_path: release.body
          files: |
            web-ext-artifacts/*
            archlinux-package/PKGBUILD
            archlinux-package/arcollect-*
            *.deb
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
